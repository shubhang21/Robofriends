{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","onChange","placeholder","Scroll","props","style","overflowY","border","height","children","App","state","searchfield","fetch","then","response","json","users","setState","filterrobots","this","filter","toLowerCase","includes","event","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,G,MAXH,SAAC,GACZ,IADaC,EACd,EADcA,GAAIC,EAClB,EADkBA,KAAMC,EACxB,EADwBA,MAEvB,OACA,sBAAKC,UAAU,sCAAf,UACG,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,UACzD,mCAAMJ,EAAN,OACA,kCAAKC,UCoBMI,EAzBC,SAAC,GAChB,IADkBC,EACnB,EADmBA,OAGlB,OACC,qBAAKJ,UAAU,GAAf,SAECI,EAAQC,KAAI,SAACC,EAAKC,GAIjB,OACK,cAAC,EAAD,CAAMT,KAAMM,EAAOG,GAAGT,KAEtBD,GAAIO,EAAOG,GAAGV,GACdE,MAAOK,EAAOG,GAAGR,OAFZQ,SCJCC,EAZC,SAAC,GAChB,IADiBC,EAClB,EADkBA,aAEjB,OACC,qBAAKT,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAChBU,KAAK,SACJC,SAAUF,EACTG,YAAY,qBCKFC,EAVA,SAACC,GAGd,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACEJ,EAAMK,YCoCIC,E,kDApCb,aACC,IAAD,8BACE,gBACKC,MAAM,CACTjB,OAAO,GACPkB,YAAY,IAJhB,E,gEAOoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAS,EAAKC,SAAS,CAACxB,OAAOuB,S,+BAKtC,IAAD,OACQE,EAAaC,KAAKT,MAAMjB,OAAO2B,QAAO,SAAA3B,GAE1C,OAAOA,EAAON,KAAKkC,cAAcC,SAAS,EAAKZ,MAAMC,YAAYU,kBAGrE,OACE,sBAAKhC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAc,SAACyB,GAC1B,EAAKN,SAAS,CAACN,YAAYY,EAAMC,OAAOC,WAExC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhC,OAAQyB,a,GA/BNQ,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAGAC,SAASC,eAAe,SAK1BZ,M","file":"static/js/main.fea7d872.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Card= ({id, name, email})=>\r\n{\r\n\treturn(\r\n\t<div className=\"bg-light-green dib br3 pa3 ma2 grow\">\r\n\t\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt='robot' />\t\r\n\t\t\t\t<h2> {name} </h2>\t\r\n\t\t\t\t<p> {email}</p>\t\t\r\n\t\t\t</div>);\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n\r\n\r\nconst CardList= ({ robots }) =>\r\n{\r\n   \r\n\treturn(\r\n\t\t<div className=\"\">\r\n\t\t{\r\n\t\t\trobots .map((user,i)=>\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\r\n\t\t\t\treturn(\r\n\t    \t\t\t\t<Card name={robots[i].name} \r\n\t    \t\t\t\tkey={i}\r\n\t    \t\t\t\tid={robots[i].id} \r\n\t    \t\t\t\temail={robots[i].email}/>\r\n\t    \t\t\t\t);\r\n\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t \t</div>\r\n\t\t\t);\r\n\t\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchChange}) =>\r\n{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input className='pa3 ba b--green bg-lightest-blue'\r\n\t\t type='search'\r\n\t\t  onChange={searchChange}\r\n\t\t   placeholder='search robots'/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\n\r\nconst Scroll = (props) => {\r\n\r\n\t\r\n\t\treturn (\r\n\t\t\t<div style={{overflowY: 'scroll' ,border:'1px solid black', height:'500px'}}>\r\n\t\t\t{ props.children }\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\r\n};\r\nexport default Scroll;","\nimport './App.css';\nimport React,{Component} from 'react'\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll';\n\nclass App extends Component\n {\n  constructor()\n  {\n    super();\n    this.state={\n      robots:[],\n      searchfield:'',\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users=> {this.setState({robots:users})})\n  }\n\n \n  render()\n  {\n    const filterrobots=this.state.robots.filter(robots=>\n    {\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    }\n    )\n  return (\n    <div className=\"tc\">\n    <h1 className='f1'>RoboFriends</h1>\n    <SearchBox searchChange={(event)=>{\n    this.setState({searchfield:event.target.value})\n  }}/>\n    <Scroll>\n      <CardList robots={filterrobots} ></CardList>\n      </Scroll>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  {/*<CardList robots={robots}/>*/}\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n//7If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}